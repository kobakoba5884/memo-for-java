/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aws.practice;

import java.util.List;
import java.util.stream.IntStream;

import com.amazonaws.services.sqs.model.Message;

import aws.practice.auroraPostgres.AuroraPostgres;
import aws.practice.dynamoDB.DynamoDBHandler;
import aws.practice.sqs.SQSHandler;

public class App{
    // config
    private static final int threadNum = 18;
    private static final int confirmNum = 3;
    private static final String queueName = "queueName";
    private static final Thread[] threads = new Thread[threadNum];
    private static final String tableName = "test";
    private static final String primaryKey = "flag name";
    private static final String targetKey = "flag";

    public static void main(String[] args){

        IntStream.range(0, threadNum).forEach((i) -> {
            new Thread(() -> {
                Thread currentThread = Thread.currentThread();
                threads[i] = currentThread;
                int index = i + 1;

                String eachQueueName = String.format("%s%d.fifo", queueName, index);
                String eachflagColumnName = String.format("%s %d", primaryKey, index);

                // init insert into table
                // AuroraPostgres.initInsert(eachQueueName);
                
                // --------------confirm flag from dynamodb--------------
                for(int count = 0; count < confirmNum; count++){
                    String flag = DynamoDBHandler.getItem(tableName, eachflagColumnName, targetKey);
                    if(flag.equals("0")){
                        break;
                    }else{
                        try {
                            Thread.sleep(3000);
                            if(count == confirmNum - 1){
                                threads[threadNum].join();
                            }
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }

                // ------------------receive messages from queue in aws sqs------------------
                // while statement in the future
                IntStream.range(1, 6).forEach((idx) -> {
                    // --------------submit message into fifo queue--------------
                    // String groupId = String.format("message%d", idx);
                    // String message = String.format("%s test%d", eachQueueName, idx);
                    // SQSHandler.sendMessage(eachQueueName, message, groupId);

                    // --------------recieve message from fifo queue--------------
                    List<Message> messages = SQSHandler.receiveMessage(eachQueueName);
                    Message msg = messages.get(0);
                    String messageGroupId = msg.getAttributes().get("MessageGroupId");
                    String messageBody = msg.getBody();
                    AuroraPostgres.updateMessage(messageGroupId, messageBody, eachQueueName);
                });
                

            }).start();
        });

        
    }
}
