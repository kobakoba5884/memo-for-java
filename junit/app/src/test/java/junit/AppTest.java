/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package junit;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Arrays;

import org.junit.runner.Description;
import org.junit.runner.Runner;
import org.junit.runner.notification.RunNotifier;

import org.junit.Test;

public class AppTest extends Runner{
    private Class<?> testClass;

    public AppTest(Class<?> testClass){
        super();
        this.testClass = testClass;
    }

    @Override
    public Description getDescription() {
        return Description.createTestDescription(testClass, "My runner description");
    }

    @Override
    public void run(RunNotifier notifier) {
        System.out.format("running the tests from MyRunner: %s\n", testClass.getName());
        try{
            Object testObject = testClass.getDeclaredConstructor().newInstance();
            Method[] methods = testClass.getMethods();

            Arrays.stream(methods).filter(method -> method.isAnnotationPresent(Test.class)).forEach(method -> {
                notifier.fireTestStarted(Description.createTestDescription(testClass, method.getName()));

                try {
                    method.invoke(testObject);
                } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
                    e.printStackTrace();
                }

                notifier.fireTestFinished(Description.createTestDescription(testClass, method.getName()));
            });
        }catch(Exception e){
            throw new RuntimeException(e);
        }
        
    }
    
}
